<?php

use Krystal\Grid\Grid;
use Krystal\Form\Element;
use Site\Collection\BookingStatusCollection;

?>

<div class="table-responsive">
    <?= Grid::render($bookings, [
        // A column to be considered as a primary key
        'pk' => 'id',
        'batch' => false,
        'tableClass' => 'table table-hover table-bordered table-striped table-condensed',
        'columns' => [
            [
                'column' => 'id',
                'type' => 'text',
                'label' => 'ID'
            ],

            [
                'column' => 'hotel',
                'hidden' => !$all
            ],

            [
                'column' => 'datetime',
                'type' => 'text',
                'label' => 'Date and time'
            ],

            [
                'column' => 'status',
                'translateable' => true,
                'value' => function($row){
                    return (new BookingStatusCollection)->findByKey($row['status']);
                }
            ],

            [
                'column' => 'arrival',
                'type' => 'text'
            ],
            
            [
                'column' => 'departure',
                'type' => 'text'
            ],
            
            [
                'column' => 'email',
                'type' => 'text'
            ],

            [
                'column' => 'phone',
                'type' => 'text'
            ],
            
            [
                'column' => 'price_group',
                'type' => 'text'
            ],

            [
                'column' => 'amount',
                'value' => function($row){
                    return number_format($row['amount']) . PHP_EOL . $row['currency'];
                }
            ],
            
            [
                'column' => 'discount',
                'label' => 'With discount',
                'translateable' => true,
                'value' => function($row){
                    return $row['discount'] ? 'Yes' : 'No';
                }
            ]
        ],
        
        'actions' => [
            'details' => function($row) use ($all){
                if ($all) {
                    return null;
                }

                return Element::icon('glyphicon glyphicon-search', $this->url('Site:Booking@detailsAction', $row['id']), ['class' => 'btn btn-primary']);
            },

            'delete' => function($row){
                // Don't show removal button if booking accepted
                if ($row['status'] == BookingStatusCollection::STATUS_ACCEPTED) {
                    return null;
                }

                return Element::icon('glyphicon glyphicon-remove', $this->url('Site:Booking@deleteAction', $row['id']), ['class' => 'btn btn-danger', 'data-button' => 'delete']);
            }
        ]

    ], $this->translator); ?>
</div>
